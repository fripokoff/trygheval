{
    "success": true,
    "data": [
        {
            "id": 2,
			"status": "active",
			"project_title": "ft_printf",
			"introduction": [
				"- Remain polite, courteous, respectful, and constructive throughout the evaluation process. The community's well-being depends on it.",
				"- Work with the student or group being evaluated to identify potential issues in their project. Take time to discuss and debate the problems identified.",
				"- Understand that there may be differences in how peers interpret the project instructions and scope. Always keep an open mind and grade as honestly as possible. Pedagogy is effective only when peer evaluations are taken seriously."
			],
			"guidelines": [
				"- Only grade the work that was turned in the Git repository of the evaluated student or group.",
				"- Double-check that the Git repository belongs to the student(s). Ensure that the project is the one expected. Also, check that 'git clone' is used in an empty folder.",
				"- Check carefully that no malicious aliases was used to fool you and make you evaluate something that is not the content of the official repository.",
				"- To avoid any surprises and if applicable, review together any scripts used to facilitate the grading (scripts for testing or automation).",
				"- If you have not completed the assignment you are going to evaluate, you have to read the entire subject prior to starting the evaluation process.",
				"- Use the available flags to report an empty repository, a non-functioning program, a Norm error, cheating, and so forth. In these cases, the evaluation process ends and the final grade is 0, or -42 in case of cheating. However, except for cheating, student are strongly encouraged to review together the work that was turned in, in order to identify any mistakes that shouldn't be repeated in the future.",
				"- Remember that for the duration of the defence, no segfault, no other unexpected, premature, uncontrolled or unexpected termination of the program, else the final grade is 0. Use the appropriate flag.",
				"You should never have to edit any file except the configuration file if it exists. If you want to edit a file, take the time to explicit the reasons with the evaluated student and make sure both of you are okay with this.",
				"- You must also verify the absence of memory leaks. Any memory allocated on the heap must be properly freed before the end of execution.",
				"You are allowed to use any of the different tools available on the computer, such as leaks, valgrind, or e_fence. In case of memory leaks, tick the appropriate flag."
			],
			"attachments": [
				{
					"title": "subject_en.pdf",
					"url": "https://github.com/ARuzgar/42-Subjects/blob/main/Cursus/ft_printf/en.subject.pdf"
				},
				{
					"title": "subject_fr.pdf",
					"url": "https://github.com/ARuzgar/42-Subjects/blob/main/Cursus/ft_printf/fr.subject.pdf"
				}
			],
            "cursus_id": "1",
			"updated_at": "2024-01-10T16:05:07.360Z",
			"students" : 1,
			"eval_points" : 3,
			"time" : 30,
			"mandatorySections" : [
				{
					"id": "679e45788c78a1cea9234f60",
					"description": "--Simply check each conversion without any flags `'cspdiuxX%'`\n--Try special cases like 0, or smallest int, or empty string, or NULL pointer.\n--Test multiple arguments/conversions.\n--Test various conversions in the middle of a sentence (put other characters before and/or after).",
					"yes_no": true,
					"sheetId": "679e45778c78a1cea9234f5f",
					"created_at": "2025-02-01T16:02:00.093Z",
					"updated_at": "2025-02-01T16:05:07.445Z"
				},
				{
					"id": "679e45788c78a1cea9234f61",
					"description": "--Redo every previous test but this time verify that the return value matches the one of the original printf.\n--Try any combination of conversions.\n--Check what happens with a series of identical conversions following each other.\n",
					"yes_no": true,
					"sheetId": "679e45778c78a1cea9234f5f",
					"created_at": "2025-02-01T16:02:00.093Z",
					"updated_at": "2025-02-01T16:05:07.445Z"
				}
			],
			"bonusSections" : [
				{
					"id": "679e45788c78a1cea9234f63",
					"description": "--Check the flags `'.', '-'` and 0.\n--Check the `%-d` with INT_MIN\n--Check the `-` flag with any value.\n--Check the `0` flag like `%04d`.\n--Check the `'.'` with multiple precisions.\n--For every test, verify the return value matches the original one.\n--For each working flag, give 1 point.\n--If all the flags work, give 2 bonus points.",
					"yes_no": false,
					"sheetId": "679e45778c78a1cea9234f5f",
					"created_at": "2025-02-01T16:02:00.646Z",
					"updated_at": "2025-02-01T16:05:07.489Z"
				},
				{
					"id": "679e45788c78a1cea9234f64",
					"description": "--Check all the conversions with the flags `'#', '+'` and space with all the other flag combinations.\n--For each working flag, give 1 point.\n--If all the flags work, give 2 bonus points.",
					"yes_no": false,
					"sheetId": "679e45778c78a1cea9234f5f",
					"created_at": "2025-02-01T16:02:00.646Z",
					"updated_at": "2025-02-01T16:05:07.489Z"
				}
			],
			"gradingOptions" :[
				{
					"id": "679e45788c78a1cea9234f62",
					"ok": true,
					"outstanding": true,
					"empty_work": true,
					"incomplete_work": true,
					"invalid_compilation": true,
					"norme": true,
					"cheat": true,
					"crash": true,
					"concerning_situations": true,
					"leaks": true,
					"forbidden_functions": true,
					"cannot_support": true,
					"sheetId": "679e45778c78a1cea9234f5f",
					"created_at": "2025-02-01T16:02:00.638Z",
					"updated_at": "2025-02-01T16:05:07.468Z"
				}
			]
        }
    ],
    "message": "Sheets found successfully"
}