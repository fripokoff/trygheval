{
  "success": true,
  "data": [
    {
      "project_title": "CPP07",
      "students": 1,
      "milestone": 6,
      "hours": 25,
      "countHour" : true,
      "finish": true,
      "eval_points": 3,
      "time": 30,
      "id": 26,
      "introduction": {
        "EN": "# Introduction\n- Remain polite, courteous, respectful and constructive throughout the evaluation process. The well-being of the community depends on it.\n- Identify with the student or group whose work is evaluated the possible dysfunctions in their project. Take the time to discuss and debate the problems that may have been identified.\n- You must consider that there might be some differences in how your peers might have understood the project's instructions and the scope of its functionalities. Always keep an open mind and grade them as honestly as possible. The pedagogy is useful only and only if the peer-evaluation is done seriously.",
        "FR": "# Introduction\n- Restez poli, courtois, respectueux et constructif tout au long du processus d'évaluation. Le bien-être de la communauté en dépend.\n- Identifiez avec l'étudiant ou le groupe dont le travail est évalué les dysfonctionnements possibles dans leur projet. Prenez le temps de discuter et de débattre des problèmes qui ont pu être identifiés.\n- Vous devez considérer qu'il peut y avoir des différences dans la façon dont vos pairs ont compris les instructions du projet et la portée de ses fonctionnalités. Gardez toujours l'esprit ouvert et notez-les aussi honnêtement que possible. La pédagogie n'est utile que si l'évaluation par les pairs est faite sérieusement."
      },
      "guidelines": {
        "EN": "# Guidelines\n- Only grade the work that was turned in the Git repository of the evaluated student or group.\n- Double-check that the Git repository belongs to the student(s). Ensure that the project is the one expected. Also, check that 'git clone' is used in an empty folder.\n- Check carefully that no malicious aliases was used to fool you and make you evaluate something that is not the content of the official repository.\n- To avoid any surprises and if applicable, review together any scripts used to facilitate the grading (scripts for testing or automation).\n- If you have not completed the assignment you are going to evaluate, you have to read the entire subject prior to starting the evaluation process.\n- Use the available flags to report an empty repository, a non-functioning program, a Norm error, cheating, and so forth. In these cases, the evaluation process ends and the final grade is 0, or -42 in case of cheating. However, except for cheating, student are strongly encouraged to review together the work that was turned in, in order to identify any mistakes that shouldn't be repeated in the future.\n- You should never have to edit any file except the configuration file if it exists. If you want to edit a file, take the time to explicit the reasons with the evaluated student and make sure both of you are okay with this.\n- You must also verify the absence of memory leaks. Any memory allocated on the heap must be properly freed before the end of execution. You are allowed to use any of the different tools available on the computer, such as leaks, valgrind, or e_fence. In case of memory leaks, tick the appropriate flag.",
        "FR": "# Directives\n- Ne notez que le travail qui a été remis dans le dépôt Git de l'étudiant ou du groupe évalué.\n- Vérifiez que le dépôt Git appartient bien à l'étudiant (aux étudiants). Assurez-vous que le projet est bien celui attendu. Vérifiez également que 'git clone' est utilisé dans un dossier vide.\n- Vérifiez attentivement qu'aucun alias malveillant n'a été utilisé pour vous tromper et vous faire évaluer quelque chose qui n'est pas le contenu du dépôt officiel.\n- Pour éviter toute surprise et le cas échéant, examinez ensemble tous les scripts utilisés pour faciliter la notation (scripts de test ou d'automatisation).\n- Si vous n'avez pas terminé le devoir que vous allez évaluer, vous devez lire l'intégralité du sujet avant de commencer le processus d'évaluation.\n- Utilisez les drapeaux disponibles pour signaler un dépôt vide, un programme non fonctionnel, une erreur de Norme, une tricherie, etc. Dans ces cas, le processus d'évaluation se termine et la note finale est de 0, ou -42 en cas de tricherie. Cependant, à l'exception de la tricherie, les étudiants sont fortement encouragés à examiner ensemble le travail qui a été remis, afin d'identifier les erreurs qui ne devraient pas être répétées à l'avenir.\n- Vous ne devriez jamais avoir à modifier un fichier, sauf le fichier de configuration s'il existe. Si vous voulez modifier un fichier, prenez le temps d'expliquer les raisons à l'étudiant évalué et assurez-vous que vous êtes tous les deux d'accord.\n- Vous devez également vérifier l'absence de fuites de mémoire. Toute mémoire allouée sur le tas doit être correctement libérée avant la fin de l'exécution. Vous êtes autorisé à utiliser n'importe quel outil disponible sur l'ordinateur, tel que leaks, valgrind ou e_fence. En cas de fuites de mémoire, cochez le drapeau approprié."
      },
      "attachments": [
        {
          "title": "subject_en.pdf",
          "url": "en.subject.pdf"
        },
        {
          "title": "subject_fr.pdf",
          "url": "fr.subject.pdf"
        },
        {
          "title": "Extras",
          "url": "/Extras"
        }
      ],
      "mandatorySections": [
        {
          "description": {
            "EN": "# Preliminary tests\n*If a cheating case is suspected, the grading and evaluation end immediately. To report it, select the \"Cheat\" flag. Be careful to use it calmly, carefully, and with discernment.*\n\n---\n\n**Prerequisites**\nThe code must compile with c++ and the flags -Wall -Wextra -Werror.\nAs a reminder, this project must follow the C++98 standard. Therefore, C++11 functions (or other standards) and containers are NOT expected.\n\nDo not grade the exercise if you find:\n- A function implemented in a header file (except for template functions).\n- A Makefile compiling without the requested flags and/or with something other than c++.\n\nSelect the \"Forbidden Function\" flag if you encounter:\n- The use of a \"C\" function (*alloc, *printf, free).\n- The use of a forbidden function in the project.\n- The use of \"using namespace <ns_name>\" or the keyword \"friend\".\n- The use of an external library, or features specific to versions later than C++98.",
            "FR": "# Tests préliminaires\n*Si un cas de tricherie est suspecté, la notation et l'évaluation se terminent immédiatement. Pour le signaler, sélectionnez le drapeau \"Triche\". Soyez prudent dans son utilisation, faites-le calmement, avec soin et discernement.*\n\n---\n\n**Prérequis**\nLe code doit compiler avec c++ et les flags -Wall -Wextra -Werror.\nPour rappel, ce projet doit suivre la norme C++98. Par conséquent, les fonctions C++11 (ou autres normes) et les conteneurs ne sont PAS attendus.\n\nNe notez pas l'exercice si vous trouvez :\n- Une fonction implémentée dans un fichier d'en-tête (sauf pour les fonctions de modèle).\n- Un Makefile compilant sans les flags demandés et/ou avec autre chose que c++.\n\nSélectionnez le drapeau \"Fonction interdite\" si vous rencontrez :\n- L'utilisation d'une fonction \"C\" (*alloc, *printf, free).\n- L'utilisation d'une fonction interdite dans le projet.\n- L'utilisation de \"using namespace <ns_name>\" ou du mot-clé \"friend\".\n- L'utilisation d'une bibliothèque externe, ou de fonctionnalités spécifiques aux versions postérieures à C++98."
          },
          "yes_no": true,
          "separator": "border-t-4",
          "type": "mandatory"
        },
        {
          "description": {
            "EN": "# Exercise 00: Start with a few functions\n*This exercise is about writing 3 simple function templates: swap(), min() and max().*\n\n---\n\n**Simple types**\nRefer to the subject for the expected output with simple types, such as int.",
            "FR": "# Exercice 00 : Commencer avec quelques fonctions\n*Cet exercice consiste à écrire 3 modèles de fonctions simples : swap(), min() et max().*\n\n---\n\n**Types simples**\nRéférez-vous au sujet pour la sortie attendue avec des types simples, tels que int."
          },
          "yes_no": true,
          "separator": "border-t-2",
          "type": "mandatory"
        },
        {
          "description": {
            "EN": "**Complex types**\nDo the functions also work with complex types? (check with the ex00.cpp file in attachment)",
            "FR": "**Types complexes**\nLes fonctions fonctionnent-elles également avec des types complexes ? (vérifiez avec le fichier ex00.cpp en pièce jointe)"
          },
          "yes_no": true,
          "separator": "border-t-4",
          "type": "mandatory"
        },
        {
          "description": {
            "EN": "# Exercise 01: Iter\n*This exercise is about writing a generic function to iterate through arrays.*\n\n---\n\n**Does it work?**\nTest the code ex01.cpp (in attachments) with the iter of the evaluated student.\nIf everything went well, it should display:\n```\n0\n  1\n  2\n  3\n  4\n  42\n  42\n  42\n  42\n  42\n```",
            "FR": "# Exercice 01 : Iter\n*Cet exercice consiste à écrire une fonction générique pour itérer à travers des tableaux.*\n\n---\n\n**Est-ce que ça marche ?**\nTestez le code ex01.cpp (dans les pièces jointes) avec l'iter de l'étudiant évalué.\nSi tout s'est bien passé, il devrait afficher :\n```\n0\n  1\n  2\n  3\n  4\n  42\n  42\n  42\n  42\n  42\n```"
          },
          "yes_no": true,
          "separator": "border-t-4",
          "type": "mandatory"
        },
        {
          "description": {
            "EN": "# Exercise 02: Array\n*This exercise is about writing a class template that behaves like an array. If the inner allocation of the actual array does not come from a use of new[], don't grade this exercise. Ask the evaluated student to prove the class template works with arrays of both simple and complex types before grading the exercise.*\n\n---\n\n**Constructors**\nIs it possible to create an empty array and an array of a specific size?",
            "FR": "# Exercice 02 : Array\n*Cet exercice consiste à écrire un modèle de classe qui se comporte comme un tableau. Si l'allocation interne du tableau réel ne provient pas d'une utilisation de new[], ne notez pas cet exercice. Demandez à l'étudiant évalué de prouver que le modèle de classe fonctionne avec des tableaux de types simples et complexes avant de noter l'exercice.*\n\n---\n\n**Constructeurs**\nEst-il possible de créer un tableau vide et un tableau d'une taille spécifique ?"
          },
          "yes_no": true,
          "separator": "border-t-2",
          "type": "mandatory"
        },
        {
          "description": {
            "EN": "**Access**\nElements must be accessible for reading and writing through the operator[] (or reading only if the instance is const). Access to an element which is out of range must throw an std::exception.",
            "FR": "**Accès**\nLes éléments doivent être accessibles en lecture et en écriture via l'opérateur[] (ou en lecture seule si l'instance est const). L'accès à un élément hors plage doit lever une std::exception."
          },
          "yes_no": true,
          "separator": false,
          "type": "mandatory"
        }
      ],
      "bonusSections": [],
      "cursus_id": "1",
      "updated_at": "2023-12-27T23:00:00.000Z",
      "gradingOptions": [
        {
          "ok": true,
          "outstanding": true,
          "empty_work": true,
          "incomplete_work": true,
          "invalid_compilation": true,
          "norme": true,
          "cheat": true,
          "crash": true,
          "concerning_situations": true,
          "leaks": true,
          "forbidden_functions": true,
          "cannot_support": false
        }
      ],
      "languages": [
        "EN",
        "FR"
      ],
      "language": "EN"
    }
  ],
  "message": "Sheet created successfully"
}